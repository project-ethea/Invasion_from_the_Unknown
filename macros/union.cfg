#textdomain wesnoth-Invasion_from_the_Unknown

#define SOUND_LIST:UNION_HIT
union-[1~4].ogg #enddef
#define SOUND_LIST:UNION_MISS
union-[1~4].ogg #enddef

#define ABILITY_UNION
    [dummy]
        id=union
        name= _ "union"
        description= _ "This unit wields the ancient power of the Union of Light and Darkness."
    [/dummy]
#enddef

#define ABILITY_UNION_ID
    [dummy]
        id=union
    [/dummy]
#enddef

#
# General FIXME:
#
# Currently, it is possible for Elynia/Mal Keshar to use a non-Union attack
# first and let the other cast Union on an enemy before ending the current
# turn. This is because we can't currently filter on the assistant's
# attacks_left attribute, without using lua_function or [filter_wml] at least.
# Personally, I feel there's no need to fix this loophole, but I somehow
# suspect at least a dozen playtesters will report it as a bug anyway.
#
# Also, enemy Union casters (spoilers!) don't disable the player's ability to
# cast Union next turn. This is partly because the implementation would be too
# complicated (especially but not exclusively on 1.12.x without the 1.13.x
# [object] duration="turn end" attribute, but also because I'm not really sure
# it would make the gameplay more interesting as opposed to outright
# frustrating.
#

#define WEAPON_SPECIAL_UNION
    [dummy]
        id=union
        name= _ "union"
        description= _ "This attack is only available on offense, and requires an assistant unit with the same weapon special to be adjacent to both the target and the attacker. If this attack is used during a turn, the assistant will not be able to perform any additional actions for the current playing sideâ€™s turn."
    [/dummy]

    [disable]
        # Not available on defense.
        id=union_disable_on_defense
        active_on=defense
    [/disable]

    [disable]
        id=union_require_adjacent_casters
        active_on=offense
        [filter_self]
            [not]
                [filter_adjacent]
                    ability=union
                [/filter_adjacent]
            [/not]
        [/filter_self]
    [/disable]
#enddef

#define UNION_EFFECTS
    [effect]
        apply_to=new_ability
        [abilities]
            {ABILITY_UNION}
        [/abilities]
    [/effect]
    [effect]
        apply_to=hitpoints
        increase_total=20%
        heal_full=yes
    [/effect]
    [effect]
        # NOTE: this must be the last [effect] for UNION_ATTACK_STATS to work
        #       as intended!
        apply_to=new_attack
        name=union
        description=_"union"
        type=arcane
        [specials]
            {WEAPON_SPECIAL_MAGICAL}
            {WEAPON_SPECIAL_UNION}
        [/specials]
        damage=29
        number=3
        range=ranged
        icon=attacks/union.png
    [/effect]
#enddef

#define UNION_ATTACK_STATS _DMG _NUM
    [+effect]
        damage={_DMG}
        number={_NUM}
    [/effect]
#enddef

#
# Include the following in scenarios with Union users. Yes, I realize I could
# use ATTACH_EVENTS_TO_UNIT instead.
#

#define UNION_CAST_EVENTS
    [event]
        id=union_controller
        name=attack
        first_time_only=no
        [filter_attack]
            special_id=union
        [/filter_attack]
        # Kind of redundant, but we want the ability to toggle the union on and
        # off as needed.
        [filter]
            ability=union
        [/filter]

        [store_unit]
            [filter]
                ability=union
                [filter_adjacent]
                    x,y=$x1,$y1
                [/filter_adjacent]
                # Optimization for enemy union casters
                side=$side_number
            [/filter]
            variable=adjacent_union_units
            kill=no
        [/store_unit]

        [foreach]
            array=adjacent_union_units
            variable=union_unit
            [do]
                {VARIABLE_DEC union_unit.attacks_left}
                {VARIABLE     union_unit.moves      0}

                [unstore_unit]
                    find_vacant=no
                    variable=union_unit
                [/unstore_unit]
            [/do]
        [/foreach]

        {CLEAR_VARIABLE adjacent_union_units}
    [/event]
#enddef

#define UNION_ANIM_MAL_KESHAR
    [attack_anim]
        [filter_attack]
            name=union
        [/filter_attack]

        [if]
            hits=yes

            {UNION_FOG}

            {UNION_BEAM}

            sound1_start_time=-450
            [sound1_frame]
                sound={SOUND_LIST:HOLY}
            [/sound1_frame]

            sound2_start_time=-400
            [sound2_frame]
                sound={SOUND_LIST:UNION_HIT}
            [/sound2_frame]
        [/if]

        start_time=-650
        offset=0.0
        blend_color=16,0,32
        blend_ratio=0.0~0.6:500,0.6~0.0:200

        [frame]
            image="units/undead-necromancers/ancient-lich-magic-[1,2].png:100"
        [/frame]
        [frame]
            image="units/undead-necromancers/ancient-lich-magic-3.png:450"
        [/frame]
        [frame]
            image="units/undead-necromancers/ancient-lich-magic-[2,1].png:100"
        [/frame]

        {SOUND:HIT_AND_MISS magic-faeriefire.ogg magic-dark-miss.ogg -350}
    [/attack_anim]
#enddef

# kate: indent-mode normal; encoding utf-8; space-indent on;
